        /*
        // Для выбора изображения используется матрица преобразования. 
        // Они определяют положение размера изображения и углы поворота
        
        // Сохраняем текущую матрицу в стек. После изменения матрицы можем снова загрузить её обратно из стека.
        glPushMatrix();
        // Одна из трех процедур преобразования матрицы. Поворачивая изображение вдоль указанной оси (xyz) на указанный угол theta
        glRotatef(theta, 0.0f, 0.0f, 0.0f);
        //glTranslatef(1.0f, 0.0f, 0.0f);
        glScalef(0.5, 1.0, 1.0);


        // Начать отрисовку заданного типа. Будем выводить треугольник, причем три точки на треугольник
        glBegin(GL_TRIANGLES);
            // 1 - цвет точки, 2 - координаты точки 
            glColor3f( 1.0f, 0.0f, 0.0f ); glVertex2f( 0.0f, 1.0f );
            glColor3f( 0.0f, 1.0f, 0.0f ); glVertex2f( 1.0f, -0.5f );
            glColor3f( 0.0f, 0.0f, 1.0f ); glVertex2f( -1.0f, -0.5f );

            // Координаты в OPEN GL нормированы (от -1 до 1 по обоим осям)

        glEnd();


        // Ранее мы сохраняли текущую матрицу преобразования в стек.


        // Извлекаем матрицу из стека и устанавливаем в текущую
        glPopMatrix();
        
        */
